import _m0 from "protobufjs/minimal";
import { Room, ParticipantInfo } from "./livekit_models";
import { RecordingInfo } from "./livekit_recording";
export declare const protobufPackage = "livekit";
export interface WebhookEvent {
    /** one of room_started, room_finished, participant_joined, participant_left, recording_started, recording_finished */
    event: string;
    room?: Room;
    /** set when event is participant_* */
    participant?: ParticipantInfo;
    /** set when event is recording_* */
    recordingInfo?: RecordingInfo;
    /** unique event uuid */
    id: string;
    /** timestamp in seconds */
    createdAt: number;
}
export declare const WebhookEvent: {
    encode(message: WebhookEvent, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): WebhookEvent;
    fromJSON(object: any): WebhookEvent;
    toJSON(message: WebhookEvent): unknown;
    fromPartial(object: DeepPartial<WebhookEvent>): WebhookEvent;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
